/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package groupproject;


import java.awt.Color;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Pc
 */
public class Client extends javax.swing.JFrame {

    Socket socketTW = null;
    DataOutputStream dosTW = null;
    DataInputStream disTW = null;
    String usernameTW;

    /**
     * Creates new form Client
     */
    public Client(String userTW) {
        initComponents();
        this.usernameTW = userTW;
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnConnectTW = new javax.swing.JButton();
        txtMessageTW = new javax.swing.JTextField();
        btnSendTW = new javax.swing.JButton();
        btnClearTW = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tPaneTW = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Excellent Love Fortune Teller ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Client");

        btnConnectTW.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnConnectTW.setForeground(new java.awt.Color(0, 102, 102));
        btnConnectTW.setText("Connect to The Server");
        btnConnectTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectTWActionPerformed(evt);
            }
        });

        txtMessageTW.setToolTipText("Type your message here");

        btnSendTW.setBackground(new java.awt.Color(255, 255, 51));
        btnSendTW.setForeground(new java.awt.Color(0, 204, 51));
        btnSendTW.setText("Send");
        btnSendTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendTWActionPerformed(evt);
            }
        });

        btnClearTW.setBackground(new java.awt.Color(153, 0, 153));
        btnClearTW.setForeground(new java.awt.Color(255, 255, 255));
        btnClearTW.setText("Clear");
        btnClearTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTWActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(tPaneTW);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtMessageTW, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSendTW)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(btnClearTW))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(btnConnectTW)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessageTW, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendTW, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearTW, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConnectTW, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectTWActionPerformed
        t.start();
    }//GEN-LAST:event_btnConnectTWActionPerformed

    private void btnSendTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendTWActionPerformed
        String message = txtMessageTW.getText();
        try {
            StyledDocument doc = tPaneTW.getStyledDocument();
            Style style = tPaneTW.addStyle("", null);
            StyleConstants.setForeground(style, Color.blue);
            doc.insertString(doc.getLength(), usernameTW + ":: " + message + "\n", style);
            dosTW.writeUTF(message);
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadLocationException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtMessageTW.setText(null);
    }//GEN-LAST:event_btnSendTWActionPerformed

    private void btnClearTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTWActionPerformed
        txtMessageTW.setText(null);
    }//GEN-LAST:event_btnClearTWActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    Thread t = new Thread(new Runnable() {
        @Override
        public void run() {
            try {
                socketTW = new Socket("localhost", 9000);
                dosTW = new DataOutputStream(socketTW.getOutputStream());
                disTW = new DataInputStream(socketTW.getInputStream());
                String msg = "";
                dosTW.writeUTF(usernameTW);
                while (true) {
                    msg = disTW.readUTF();
                    String msgnext = "Server :: " + msg;
                    StyledDocument doc = tPaneTW.getStyledDocument();
                    Style style = tPaneTW.addStyle("", null);
                    StyleConstants.setForeground(style, Color.red);
                    try {
                        doc.insertString(doc.getLength(), msgnext, style);
                       
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    });

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearTW;
    private javax.swing.JButton btnConnectTW;
    private javax.swing.JButton btnSendTW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane tPaneTW;
    private javax.swing.JTextField txtMessageTW;
    // End of variables declaration//GEN-END:variables
}
